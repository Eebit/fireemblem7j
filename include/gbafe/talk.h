#pragma once

#include "global.h"

enum talk_vide {
    BGCHR_TALK = 0x80,

    BGPAL_TALK_BACKGROUND = 8,
};

enum talk_choice {
    TALK_RESULT_CANCEL,
    TALK_RESULT_YES,
    TALK_RESULT_NO,
};

enum talk_flag {
    TALK_FLAG_NOSKIP = 1 << 2,
    TALK_FLAG_NOFAST = 1 << 3,
    TALK_FLAG_OPAQUE = 1 << 4,
};

// ??? sub_8007C10
// ??? sub_8007C48
// ??? sub_8007C64
void InitTalk(int chr, int lines, bool unpack_bubble);
// ??? InitSpriteTalk
// ??? sub_8007DE0
// ??? sub_8007DF4
// ??? StartTalkExt
// ??? StartTalkMsg
// ??? StartTalkMsgExt
// ??? StartTalk
// ??? EndTalk
// ??? SetTalkLines
// ??? ClearAllTalkFlags
// ??? SetTalkFlag
// ??? sub_8007F38
// ??? sub_8007F44
// ??? sub_8007F58
// ??? sub_8007F68
// ??? sub_8007F84
// ??? sub_8007FC0
// ??? sub_8008074
// ??? sub_80080A8
// ??? sub_800821C
// ??? sub_8008308
// ??? LockTalk
// ??? IsTalkLocked
// ??? ResumeTalk
// ??? sub_800837C
// ??? TalkToggleInvertedPalette
// ??? TalkInterpret
// ??? sub_8008CB8
// ??? sub_8008CC4
// ??? sub_8008DA8
// ??? sub_8008DC8
// ??? sub_8008DFC
// ??? sub_8008E58
// ??? sub_8008EB0
// ??? sub_8008ECC
// ??? sub_8008F24
// ??? sub_8008F80
// ??? sub_8009080
// ??? sub_800909C
// ??? sub_80090C0
// ??? nullsub_24
// ??? sub_800914C
// ??? sub_8009178
// ??? sub_80091AC
// ??? sub_8009218
// ??? sub_800925C
// ??? sub_8009310
// ??? sub_8009418
// ??? sub_8009458
// ??? sub_800954C
// ??? sub_8009564
// ??? sub_8009598
// ??? sub_80095D4
// ??? sub_80095E4
// ??? sub_8009628
// ??? sub_800968C
// ??? sub_80096E0
// ??? sub_800981C
// ??? sub_8009834
// ??? sub_80098A0
// ??? sub_8009920
// ??? sub_8009AA8
// ??? nullsub_25
// ??? sub_8009BE8
// ??? sub_8009C58
// ??? sub_8009C8C
// ??? sub_8009D0C
// ??? sub_8009D70
// ??? sub_8009D94
// ??? SetTalkFaceDisp
// ??? SetTalkFaceMouthMove
// ??? SetTalkFaceNoMouthMove
// ??? IsTalkActive
// ??? FaceExists
// ??? GetTalkChoiceResult
// ??? SetTalkChoiceResult
// ??? SetTalkNumber
// ??? SetTalkUnkStr
// ??? PrintStringToTexts
// ??? TalkPutSpriteText_OnIdle
// ??? sub_8009F8C
// ??? sub_8009F98
// ??? sub_8009FAC
// ??? sub_800A378
// ??? sub_800A390
// ??? sub_800A3A4
// ??? StartTalkDebug
// ??? sub_800A3B8
// ??? sub_800A3C8
// ??? TalkBgSync

struct ProcTalkAdvance {
    PROC_HEADER;

    STRUCT_PAD(0x29, 0x4C);

    void * dst;
    int unk50;
    int lines, _fill;

    STRUCT_PAD(0x5C, 0x64);

    s16 timer;
};

bool TalkAdvanceDeamon_Loop(ProcPtr proc);
void TalkAdvanceDeamon_End(ProcPtr proc);
void CleanTalkObjects(int chr, int lines, int default_val, ProcPtr parent);
void TalkAdvance_Init(struct ProcTalkAdvance * proc);
void TalkAdvance_Loop(struct ProcTalkAdvance * proc);

// ??? gUnk_08BFFB30
// ??? sTalkSt
// ??? gUnk_08BFFB6C
// ??? ProcScr_Talk
// ??? gUnk_08BFFBB4
// ??? gUnk_08BFFBBC
// ??? gUnk_08BFFBDC
// ??? gUnk_08BFFBFC
// ??? gUnk_08BFFC3C
// ??? gUnk_08BFFC7C
// ??? gUnk_08BFFC9C
// ??? gUnk_08BFFCAC
// ??? gUnk_08BFFCBC
// ??? gUnk_08BFFCD4
// ??? gUnk_08BFFCFC
// ??? gUnk_08BFFD2C
// ??? gUnk_08BFFD3C
// ??? gUnk_08BFFD4C
// ??? gUnk_08BFFD7C
// ??? gUnk_08BFFD9C
// ??? gUnk_08BFFDB6
// ??? gUnk_08BFFE18
extern struct ProcCmd ProcScr_TalkAdvanceDeamon[];
extern struct ProcCmd ProcScr_TalkAdvance[];
